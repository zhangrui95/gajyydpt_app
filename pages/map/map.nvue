<template>
	<view :style="{width:'100%', height:height+ 'px'}" ref="map" id="map">
		<web-view :src="'/hybrid/html/map.html?jd=' + jd + '&wd=' + wd"  @pagestart="onPageStart"  ref="webview" :style="{width:'100%', height:height+ 'px'}" @onPostMessage="message"></web-view>
		<image class="wdcj" src="/static/wdcj.png" @click="getshowCj"></image>
		<image class="sj" src="/static/sj.png" v-if="showCj"></image>
		<view class="cjList" v-if="showCj">
			<text class="cjItem itemBorder" @click="getJqList('0')">待签收({{dqsNum}})</text>
			<text class="cjItem itemBorder" @click="getJqList('1')" style="color: #05a2f6;">已签收({{yqsNum}})</text>
			<text class="cjItem itemBorder" @click="getJqList('2')" style="color: #feaf57;">已到达({{yddNum}})</text>
			<text class="cjItem itemBorder" @click="getJqList('3')" style="color: #1afa29;">已完结({{ywjNum}})</text>
			<text class="cjItem" @click="getJqList('4')" style="color: #AAAAAA;">已反馈({{yfkNum}})</text>
		</view>
		<scroller class="jqList" v-if="showCj && showJq && jqList && jqList.length > 0">
			<view class="hcItem" v-for="(item,index) in jqList" @click="getDetail(item)">
				<text class="nameBt">{{item.bt}}</text>
				<text class="detailItem">发布时间：{{item.fbsj}}</text>
				<text class="detailItem">发布单位：{{item.fbdwmc}}</text>
				<text class="detailItem">发布人员：{{item.fbrxm}}</text>	
			</view>
		</scroller>
		<image class="btnPerson" src="/static/ryhc.png" @click="routerAdd('人员')"></image>
		<image class="btnCar" src="/static/clhc.png" @click="routerAdd('车辆')"></image>
		<view class="bottomBox">
			<view class="itemType">
				<image src="/static/dqs.png" class="iconLeft"></image>
				<text class="itemName">待签收</text>
			</view>
			<view class="itemType">
				<image src="/static/dfk.png" class="iconLeft"></image>
				<text class="itemName">已签收</text>
			</view>
			<view class="itemType">
				<image src="/static/ddc.png" class="iconLeft"></image>
				<text class="itemName">已到达</text>
			</view>
			<view class="itemType">
				<image src="/static/dwj.png" class="iconLeft"></image>
				<text class="itemName">已完结</text>
			</view>
			<view class="itemType">
				<image src="/static/yfk.png" class="iconLeft"></image>
				<text class="itemName">已反馈</text>
			</view>
		</view>
		<!-- 抽屉 -->
		<uni-drawer ref="drawer">
			<view class="drawer_container">
				<view class="drawer_userinfo_block">
					<image class="right_touxiang" src="../../static/userIconborder.png" mode="widthFix"></image>
					<text class="name">{{userinfo?userinfo.load.userInfo.xm:''}}</text>
					<text class="ard">{{userinfo?userinfo.load.userInfo.jh:''}}</text>
				</view>
				<view class="opertion_list">
					<uni-list>
					<!-- 	<uni-list-item clickable @click="setBuckle" title="卡口设置" thumb="../../static/weizhi.png" link thumb-size="sm"
						 :rightText="blckle?blckle:''"></uni-list-item> -->
						<!-- <uni-list-item clickable @click="routerNotic" title="通知通告" thumb="../../static/tz.png" link thumb-size="sm">
						</uni-list-item> -->
						<uni-list-item clickable @click="routerNav('人员')" title="人员核查历史" thumb="../../static/ryls.png" link thumb-size="sm">
						</uni-list-item>
						<uni-list-item clickable @click="routerNav('车辆')" title="车辆核查历史" thumb="../../static/clls.png" link thumb-size="sm">
						</uni-list-item>
						<!-- <uni-list-item title="修改密码" thumb="../../static/mima.png" link thumb-size="sm"></uni-list-item> -->
						<uni-list-item clickable @click="resetData" title="清除缓存" thumb="../../static/qingchu.png" link thumb-size="sm"></uni-list-item>
						<uni-list-item title="检查版本" thumb="../../static/gengxin.png" link thumb-size="sm" :rightText="version"></uni-list-item>
					</uni-list>
				</view>
				<view style="padding: 16px;">
					<button type="default" class="ogOut_block" @click="routerLogin"><text style="color: #fff;">退出系统</text></button>
				</view>
			</view>
		</uni-drawer>
		<uni-popup id="popupDialog" ref="popupDialog" type="dialog">
			<uni-popup-dialog :type="msgType" title="" content="此操作不会保存当前数据,是否继续?" :before-close="true" @confirm="dialogConfirm"
			 @close="dialogClose" :reset="'否'" :submit="'是'"></uni-popup-dialog>
		</uni-popup>
		<uni-popup id="popupLogout" ref="popupLogout" type="dialog">
			<uni-popup-dialog :type="msgType" title="" content="是否要退出系统?" :before-close="true" @confirm="dialogLogout" @close="dialogClose"
			 :reset="'否'" :submit="'是'"></uni-popup-dialog>
		</uni-popup>
		<uni-popup id="popupUpload" ref="popupUpload" type="dialog">
				<uni-popup-dialog :type="msgType" title="" content="检测到有新版本是否更新?" :before-close="true" @confirm="dialogUpload"
				 @close="dialogClose" :reset="'暂不更新'" :submit="'更新'"></uni-popup-dialog>
			</uni-popup>
	</view>
</template>

<script>
	let HMap;
	import uniList from "@/components/uni-list/uni-list.vue"
	import uniListItem from "@/components/uni-list-item/uni-list-item.vue"
	import uniPopupDialog from '../../components/uni-popup/uni-popup-dialog.vue';
	import request from '@/common/request.js'
	import moment from 'moment'
	import {
		oneLine,
		searchInterface,
		getCredential
	} from '../../utils';
	var db = require('../../common/db.js');
	var convert = require('xml-js');
	let time;
	export default {
		data() {
			return {
				height:600,
				showCj:false,
				showJq:false,
				type:'',
				msgType: 'warn',
				personNum: 0,
				carNum: 0,
				// blckle: '',
				userinfo: uni.getStorageSync('userCredential') ? getCredential().userCredential : '',
				updateId: '',
				version: plus.runtime.version,
				isNotic: '',
				jd:'',
				wd:'',
				dqsNum:0,
				yqsNum:0,
				yddNum:0,
				ywjNum:0,
				yfkNum:0,
				jqList:[],
			}
		},
		components: {
			uniPopupDialog
		},
		onNavigationBarButtonTap(e) {
			if(e.float == "left"){
				this.handleClick();
			}else if(e.float == "right"){
				this.routerNotic();
			}
		},
		onShow() {
			if (uni.getStorageSync('userCredential')) {
				this.userinfo = getCredential().userCredential
			}
			// db.openDB('data')
			db.SelectData(this, 'person', oneLine `
				select count(1) as count  from collectDataTable where dataType=15 and date(createdAt) =  date('now')
			`,
				true)
			db.SelectData(this, 'car', oneLine `
				select count(1) as count from collectDataTable where dataType=16 and date(createdAt) =  date('now')
			`,
				true)
			uni.$on('isRead', (data) => {
				this.isNotic = data;
			})
		},
		onHide() {
			if(time){
				clearInterval(time);
			}
		},
		onLoad() { 
			let _this = this;
			let condition = {
				startTime: moment().format('YYYY-MM-DD') + ' 00:00:00',
				endTime: moment().format('YYYY-MM-DD') + ' 23:59:59',
			};
			request('/jq/getJqStatusListCount', condition , "POST", "http://192.168.104.137:7702").then(res => {
				console.log('res.result.list',res)
					res.result.list.map((item)=>{
						if(item.notice_status === '0'){
							 _this.dqsNum = item.count;
						}else if(item.notice_status === '1'){
							 _this.yqsNum = item.count;
						}else if(item.notice_status === '2'){
							 _this.yddNum = item.count;
						}else if(item.notice_status === '3'){
							 _this.ywjNum = item.count;
						}else if(item.notice_status === '4'){
							 _this.yfkNum = item.count;
						}
					});
			})
			uni.getSystemInfo({
				success:function(res) {
					_this.height = res.windowHeight
				}
			});
			// uni.getStorage({
			// 	key: 'buckle',
			// 	success: function(res) {
			// 		console.log('res', res)
			// 		_this.blckle = res.data
			// 	}
			// });
			// this.blckle = option.type;
			uni.getLocation({
			    type: 'wgs84',
			    success: function (res) {
					_this.jd = res.longitude;
					_this.wd = res.latitude;
			    }
			});
			this.getMyGps();
			this.getAllJq();
			this.getJwt(); 
			time = setInterval(()=>{
				this.getJwt(); 
				this.getAllJq();
				this.getMyGps();
			},10000)
		},
		methods: {
			getMyGps(){
				let _this = this;
				uni.getLocation({
				    type: 'wgs84',
				    success: function (res) {
						let condition = {
							gps_time:moment().format('YYYY-MM-DD HH:mm:ss'),
							imei:uni.getStorageSync('imei'),
							x: res.longitude.toString(),
							y: res.latitude.toString()
						}
						if(!_this.PageStart) {
							return false;
						}
						_this.$refs.webview.evalJs("myGps("+JSON.stringify([res.longitude,res.latitude])+")");
						request('/jwtGps/insertJwtGps', condition, "POST", "http://192.168.104.137:7702").then(res => {});
				    }
				});
			},
			getAllJq(){
				let condition = {
				    notice_status: '',
					startTime: moment().format('YYYY-MM-DD') + ' 00:00:00',
					endTime: moment().format('YYYY-MM-DD') + ' 23:59:59',
				};
				request('/jq/getJqStatusList', condition, "POST", "http://192.168.104.137:7702").then(res => {
						if(!this.PageStart) {
							return false;
						}
						this.$refs.webview.evalJs("allJqfunction("+JSON.stringify(res.result.allStatus)+")");
				});
			},
			getJwt(){
				request('/jwtGps/getJwtGps', {type:'警务通'}, "POST", "http://192.168.104.137:7702").then(res => {
					this.sendMessageToWebview(res.result.list);
				});
			},
			onPageStart: function(e) {
				this.PageStart = true;
			},
			sendMessageToWebview(data){
				if(!this.PageStart) {
					return false;
				}
				// jsfunction 其实就是你自己在你的webview 里面写个方法。
				this.$refs.webview.evalJs("jsfunction("+JSON.stringify(data)+")");
			},
			getDetail(item){
				let type = item.notice_status;
				let id = item.notice_id;
				let coord = JSON.stringify([item.jd,item.wd]);
				let category = item.notice_category;
				// console.log('警情id：',type,id);
				uni.navigateTo({
					url: `/pages/mapDetail/mapDetail?type=${type}&coord=${coord}&id=${id}&category=${category}`
				})
			},
			message(evt) {
				let type = evt.detail.data[0].action;
				let coord = JSON.stringify(evt.detail.data[0].coordinates);
				let id = evt.detail.data[0].layer.notice_id;
				let category = evt.detail.data[0].layer.notice_category;
				uni.navigateTo({
					url: `/pages/mapDetail/mapDetail?type=${type}&coord=${coord}&id=${id}&category=${category}`
				})
			},
			getshowCj(){
				this.showCj = !this.showCj;
				if(!this.showCj){
					this.showJq = false;
					this.type = '';
				}
			},
			getJqList(type){
				let condition = {
				    notice_status: type,
					startTime: moment().format('YYYY-MM-DD') + ' 00:00:00',
					endTime: moment().format('YYYY-MM-DD') + ' 23:59:59',
				};
				if(type == this.type){
					this.showJq = !this.showJq;
				}else{
					this.showJq = true;
					request('/jq/getJqStatusList', condition, "POST", "http://192.168.104.137:7702").then(res => {
							this.jqList = res.result.list;
					});
				}
				this.type = type;
			},
			dialogClose(done) {
				done()
			},
			dialogLogout(done) {
				plus.runtime.quit();
				// uni.navigateTo({
				// 	url: '/pages/login/index'
				// })
				done()
			},
			goMap(){
				uni.navigateTo({
					url: '/pages/map/map'
				})
			},
			dialogUpload(done) {
				this.$request('/Update/api/upgrade/downloadApk.do', {
					fileId: this.updateId,
				}, "POST", "htdz").then(res => {
					// 打印调用成功回调
				})
			},
			dialogConfirm(done) {
				done()
				uni.showLoading({
					title: '清除数据中'
				})
				// db.openDB('data')
				db.deleteTable('collectDataTable')
				db.SelectData(this, 'person', oneLine `
					select count(1) as count  from collectDataTable where dataType=15 and date(createdAt) =  date('now')
				`,
					true)
				db.SelectData(this, 'car', oneLine `
					select count(1) as count from collectDataTable where dataType=16 and date(createdAt) =  date('now')
				`,
					true)
				// db.closeDB('data')
				uni.removeStorageSync('buckle');
				uni.removeStorageSync('buckleId')
				// this.blckle = ''
				uni.hideLoading()
			},
			// 退出应用
			routerLogin() {
				this.$refs.drawer.close()
				this.$refs.popupLogout.open()
			},
			resetData() {
				this.$refs.drawer.close()
				this.$refs.popupDialog.open()
			},
			checkVersion() {
				uni.showLoading({
					title: '正在检查更新'
				})
				// 调用sdk检查更新
				var main = plus.android.runtimeMainActivity();
				var updateApp = plus.android.importClass('com.hylink.wwpc.updateApp');
				var update = new updateApp();
				let status = update.checkUpdate(main)
				if (status != 0) {
					uni.hideLoading()
				}
				if (status == 3 || status == 2) {
					uni.showToast({
						'title': '当前已是最新版本',
						icon: 'none'
					})
				} else {
					this.$refs.drawer.close()
					this.$refs.popupUpload.open()
				}
			},
			// setBuckle() {
			// 	this.$refs.drawer.close();
			// 	uni.navigateTo({
			// 		url: `/pages/buckle/buckle?type=${this.blckle}`
			// 	})
			// },
			routerNotic(params) {
				uni.navigateTo({
					url: `/pages/noticList/index`
				})
			},
			handleClick() {
				this.$refs.drawer.open();
			},
			routerNav(type) {
				this.$refs.drawer.close()
				uni.navigateTo({
					url: `/pages/personList/index?type=${type}`
				});
			},
			routerAdd(type) {
				// 主要为了测试
				// if (uni.getStorageSync('buckle') == '') {
				// 	uni.showToast({
				// 		title: '请先选择卡口',
				// 		icon: 'none'
				// 	})
				// 	return
				// }
				uni.navigateTo({
					url: `/pages/personCheck/index?type=${type}`
				});
			}
		}
	}
</script>

<style>
	.hcItem{
		padding: 5px 0;
		margin: 0 8px;
		border-style:solid;
		border-color:#e8e8e8;
		border-bottom-width:1rpx;
	}
	.fbxx{
		flex-direction:row;
		flex-wrap: wrap;
		justify-content: flex-start;
	}
	.nameBt{
		font-size: 14px;
		height: 16px;
		line-height: 16px;
	}
	.detailItem{
		font-size: 11px;
		color: #9b9fa2;
		height:16px;
		line-height: 16px;
	}
	.jqList{
		width: 470rpx;
		height: 300px;
		background-color: rgba(255,255,255,0.9);
		border-radius: 5px;
		position: absolute;
		top: 85px;
		left: 125px;
		z-index:99;
	}
	.cjList{
		background-color: rgba(255,255,255,0.9);
		width: 100px;
		text-align: center;
		position: absolute;
		top: 85px;
		left: 20px;
		border-radius: 5px;
		z-index:999;
	}
	.sj{
		position: absolute;
		top: 74px;
		left: 42px;
		z-index: 99;
		width: 16px;
		height: 16px;
		opacity: 0.9;
	}
	.cjItem{
		font-size: 12px;
		text-align: center;
		color: #fd1a35;
		width: 100px;
		height: 34px;
		line-height: 34px;
	}
	.itemBorder{
		border-style:solid;
		border-color:#eee;
		border-bottom-width:1px;
	}
	.wdcj{
		width: 60px;
		height: 60px;
		position: absolute;
		top: 16px;
		left: 20px;
		z-index:999;
	}
	.btnPerson{
		position: absolute;
		top: 16px;
		right: 110px;
		z-index: 999;
		width: 92px;
		height: 30px;
	}
	.btnCar{
		position: absolute;
		top: 16px;
		right: 10px;
		z-index: 999;
		width: 92px;
		height: 30px;
	}
	.bottomBox{
		width: 85px;
		position: absolute;
		bottom: 20px;
		right: -5px;
		background-color: #fff;
		box-shadow:0 0 10px #ddd;
		padding: 5px;
		border-radius: 5px;
		z-index: 999;
	}
	.itemType{
		position: relative;
		height: 17px;
		margin: 3px 0;
	}
	.iconLeft{
		width: 14px;
		height: 17px;
		position: absolute;
		left: 6px;
	}
	.itemName{
		font-size: 12px;
		color: #333333;
		position: absolute;
		left: 28px;
		height: 18px;
		line-height: 18px;
	}
	.drawer_userinfo_block {
		height: 140px;
		align-items: center;
		padding: 16px;
	}
	.right_touxiang {
		width: 50px;
		height: 50px;
	}
	.ogOut_block{
		background-color: #10A7D3;
		color: #fff;
	    border-width: 0;
		height: 36px;
		line-height: 36px;
	}
	.name{
		font-size: 16px;
		color: #333;
		height: 24px;
		line-height: 24px;
		margin-top: 10px;
	}
	.ard{
		font-size: 14px;
		color: #666;
		height: 24px;
		line-height: 24px;
	}
</style>
